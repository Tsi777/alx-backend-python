pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS     = credentials('github-credentials')   // GitHub PAT
        DOCKER_HUB_CREDENTIALS = credentials('dockerhub-credentials') // Docker Hub PAT
        DOCKER_IMAGE           = "habtamutes/messaging_app:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/alx-backend-python/messaging_app.git',
                    credentialsId: "${GITHUB_CREDENTIALS}"
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                  pip3 install --upgrade pip
                  pip3 install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                  mkdir -p reports
                  cd messaging_app
                  pytest --maxfail=1 --disable-warnings -q --junitxml=reports/results.xml
                '''
            }
            post {
                always {
                    junit 'reports/results.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE} messaging_app"
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([string(credentialsId: 'dockerhub-credentials', variable: 'DOCKER_TOKEN')]) {
                    sh '''
                    echo "$DOCKER_TOKEN" | docker login -u "your-dockerhub-username" --password-stdin
                    docker push ${DOCKER_IMAGE}
                    '''
                }
            }
        }
    }
}
